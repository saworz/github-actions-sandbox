name: Deployment Pipeline
on: 
  pull_request:
    types: [opened, reopened]
  push:
    branches:
      - main
      - feat/**
    paths-ignore:
      - '.github/workflows/*'
  workflow_dispatch:

env:
  WORKFLOW_LEVEL_ENV: workflow
jobs:
  lint:
    environment: sample_env
    env:
      JOB_LEVEL_ENV: lint
      GITHUB_SECRET: ${{ secrets.MY_SECRET }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version: '3.13'
      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version: '3.13'

      - name: Cache dependencies
        uses: actions/cache@v4.2.4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        id: run_tests
        run: pytest --html=pytest-report.html --self-contained-html


      - name: Upload test report if pytest fails
        if: steps.run_tests.outcome == 'failure'
        uses: actions/upload-artifact@v4.3.3
        with:
          name: test-report
          path: ./pytest-report.html
          
  deploy:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version: '3.13'
      
      - name: Cache dependencies
        uses: actions/cache@v4.2.4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Deploy application
        run: echo "Deploying application..."